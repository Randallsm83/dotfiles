[tools]
# global tool versions go here
# you can set these with `mise use -g`
bun = "latest"
cargo-binstall = "latest"
"cargo:eza" = "latest"
"cargo:fd-find" = "latest"
direnv = "latest"
fzf = "latest"
go = "latest"
lua = "5.1.5"
luajit = "2.1.0-beta3"
neovim = "latest"
node = "latest"
perl = "latest"
php = "latest"
python = "latest"
ripgrep = "latest"
ruby = "latest"
rust = "latest"
sqlite = "latest"
starship = "latest"
usage = "latest"
uv = "latest"
vim = "latest"
yarn = "latest"

[settings]
# plugins can read the versions files used by other version managers (if enabled by the plugin)
# for example, .nvmrc in the case of node's nvm
idiomatic_version_file = true             # enabled by default (unlike asdf)
idiomatic_version_file_disable_tools = [] # disable for specific tools

# configure `mise install` to always keep the downloaded archive
always_keep_download = false # deleted after install by default
always_keep_install = false  # deleted on failure by default

# configure how frequently (in minutes) to fetch updated plugin repository changes
# this is updated whenever a new runtime is installed
# (note: this isn't currently implemented but there are plans to add it: https://github.com/jdx/mise/issues/128)
plugin_autoupdate_last_check_duration = '1 week' # set to 0 to disable updates

# config files with these prefixes will be trusted by default
trusted_config_paths = ['']

verbose = false      # set to true to see full installation output, see `MISE_VERBOSE`
http_timeout = "30s" # set the timeout for http requests as duration string, see `MISE_HTTP_TIMEOUT`
jobs = 4             # number of plugins or runtimes to install in parallel. The default is `4`.
raw = false          # set to true to directly pipe plugins to stdin/stdout/stderr
yes = false          # set to true to automatically answer yes to all prompts

not_found_auto_install = true # see MISE_NOT_FOUND_AUTO_INSTALL
task_output = "prefix"        # see Tasks Runner for more information
paranoid = false              # see MISE_PARANOID

shorthands_file = '~/.config/mise/shorthands.toml' # path to the shorthands file, see `MISE_SHORTHANDS_FILE`
disable_default_shorthands = false # disable the default shorthands, see `MISE_DISABLE_DEFAULT_SHORTHANDS`
disable_tools = [
] # disable specific tools, generally used to turn off core tools

env_file = '.env' # load env vars from a dotenv file, see `MISE_ENV_FILE`

experimental = true # enable experimental features

# configure messages displayed when entering directories with config files
status = { missing_tools = "if_other_versions_installed", show_env = false, show_tools = false }

# cargo
# mise use -g cargo-binstall
cargo = { binstall = true }

# node
node = {}

# npm
# mise use -g bun
npm = { bun = true }

# pipx
# mise use -g uv
pipx = { uvx = true }

# python
python = {}

# ruby
ruby = {}

# rust
# Set in env var instead
# rust = { cargo_home = '.local/share/cargo', rustup_home = '.local/share/rustup' }

# "_" is a special key for information you'd like to put into mise.toml that mise will never parse
[_]

[env]
